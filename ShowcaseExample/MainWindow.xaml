<Window x:Class="ShowcaseExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:graphxctrl="clr-namespace:GraphX.Controls;assembly=CK.GraphX"
        xmlns:gx="clr-namespace:GraphX;assembly=CK.GraphX"
        xmlns:local="clr-namespace:ShowcaseExample"  
        xmlns:zb="clr-namespace:GraphX.Xceed.Wpf.Toolkit.Zoombox;assembly=CK.GraphX"
        Background="{StaticResource WindowBackgroundBrush}"
        Title="GraphX showcase example v1.0.1" Height="600" Width="800" MinWidth="800" MinHeight="600"
        >
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        
        <TabControl Grid.Row="1" x:Name="tabctrl" SelectedIndex="0">
            <TabControl.Items>
                <TabItem Header="General Graph" x:Name="tab1" Height="30">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height=" Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border CornerRadius="6" BorderBrush="Black" Background="White" Margin="3" BorderThickness="2">
                            <TextBlock Margin="3" TextWrapping="Wrap" TextAlignment="Center" Text="Along with the main algorithms showcase this example shows how to deal with vertex dragging problem using old-style ZoomControl."/>
                        </Border>

                        <graphxctrl:ZoomControl x:Name="gg_zoomctrl" Grid.Row="1">
                            <local:GraphAreaExample x:Name="gg_Area"/>
                        </graphxctrl:ZoomControl>

                        <Border Name="gg_loader" Visibility="Collapsed" CornerRadius="4" BorderBrush="Black" BorderThickness="3" HorizontalAlignment="Center" VerticalAlignment="Center"
                                Background="LightGray" Grid.Row="1">
                            <Label VerticalAlignment="Center" Content="Async loading graph..." Margin="10"/>
                        </Border>

                        <DockPanel LastChildFill="False" Grid.Column="1" Margin="3" Grid.RowSpan="2">
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
                                <Button Height="50" Margin="3" Name="gg_but_randomgraph"  DockPanel.Dock="Top" UseLayoutRounding="True">
                                    <Image Source="Images/dice.png"/>
                                </Button>
                                <Button Height="50" Margin="3" Name="gg_but_relayout" DockPanel.Dock="Top" UseLayoutRounding="True">
                                    <Image Source="Images/update.png"/>
                                </Button>
                            </StackPanel>
                            <GroupBox Header="Common settings" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <TextBlock Text="Vertex count" DockPanel.Dock="Top" HorizontalAlignment="Center"/>
                                    <TextBox Name="gg_vertexCount" Margin="3" DockPanel.Dock="Top" PreviewTextInput="gg_vertexCount_PreviewTextInput"/>
                                    <CheckBox Name="gg_async" Margin="3" Content="Use async computation" DockPanel.Dock="Top"/>
                                    <CheckBox Name="gg_arearesize" Margin="3" Content="Don't allow area resize on drag"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Layout algorithm" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <ComboBox IsReadOnly="True" Name="gg_layalgo" SelectionChanged="gg_layalgo_SelectionChanged" Margin="3" DockPanel.Dock="Top"/>
                                    <CheckBox Name="gg_useExternalLayAlgo" Checked="gg_useExternalLayAlgo_Checked" Unchecked="gg_useExternalLayAlgo_Checked" Margin="3" Content="Use external algorithm"/>
                                </DockPanel>
                            </GroupBox>

                            <GroupBox Header="Overlap removal algorithm" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <ComboBox IsReadOnly="True" Name="gg_oralgo" SelectionChanged="gg_oralgo_SelectionChanged" Margin="3" DockPanel.Dock="Top"/>
                                    <CheckBox Name="gg_useExternalORAlgo" Checked="gg_useExternalORAlgo_Checked" Unchecked="gg_useExternalORAlgo_Checked" Margin="3" Content="Use external algorithm"/>
                                </DockPanel>
                            </GroupBox>

                            <GroupBox Header="Edge routing algorithm" DockPanel.Dock="Top" Visibility="Collapsed">
                                <DockPanel LastChildFill="False">
                                    <ComboBox IsReadOnly="True" Name="gg_eralgo" SelectionChanged="gg_eralgo_SelectionChanged" Margin="3" DockPanel.Dock="Top"/>
                                    <CheckBox Name="gg_useExternalERAlgo" Checked="gg_useExternalERAlgo_Checked" Unchecked="gg_useExternalERAlgo_Checked" Margin="3" Content="Use external algorithm"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Save/load layout" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <Button Margin="3" DockPanel.Dock="Left" Width="60" Content="SAVE" Name="gg_saveLayout"/>
                                    <Button Margin="3" DockPanel.Dock="Right" Width="60" Content="LOAD" Name="gg_loadLayout"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Save/load states" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <Button Margin="3" DockPanel.Dock="Left" Width="60" Content="SAVE" Name="gg_saveState"/>
                                    <Button Margin="3" DockPanel.Dock="Right" Width="60" Content="LOAD" Name="gg_loadState"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Export" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <Button Margin="3" DockPanel.Dock="Top" Content="Save as PNG image" Name="gg_saveAsPngImage" Click="gg_saveAsPngImage_Click"/>
                                    <Button Margin="3" DockPanel.Dock="Top" Content="Print layout" Name="gg_printlay" Click="gg_printlay_Click" />
                                </DockPanel>
                            </GroupBox>

                            <Button Content="Zoom to random control" Margin="3" DockPanel.Dock="Top" Name="gg_but_randomzoom" Click="gg_but_randomzoom_Click" Visibility="Collapsed"/>
                            <TextBox Margin="3" Name="gg_txt_number" DockPanel.Dock="Top"  Visibility="Collapsed"/>
                        </DockPanel>
                        
                    </Grid>
                </TabItem>
                <TabItem Header="Themed Graph" x:Name="tab2" Height="30">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>                        
                        <Grid.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="Templates/ThemedGraphXTemplates.xaml"/>
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </Grid.Resources>
                        
                        <Border CornerRadius="6" BorderBrush="Black" Background="White" Margin="3" BorderThickness="2">
                            <TextBlock Margin="3" TextWrapping="Wrap" TextAlignment="Center" Text="This graph is designed for templating, animation and visual behaviours preview. See vertex and edge tooltips, templated highlights and animations."/>
                        </Border>

                        <zb:Zoombox x:Name="tg_zoomctrl" Grid.Row="1">
                            <local:GraphAreaExample x:Name="tg_Area">
                                <local:GraphAreaExample.Resources>
                                    <ResourceDictionary>
                                        <ResourceDictionary.MergedDictionaries>
                                            <ResourceDictionary Source="Templates/TransparentTooltips.xaml"/>
                                        </ResourceDictionary.MergedDictionaries>
                                    </ResourceDictionary>
                                </local:GraphAreaExample.Resources>
                            </local:GraphAreaExample>
                        </zb:Zoombox>
                        <Border Name="tg_loader" Visibility="Collapsed" CornerRadius="4" BorderBrush="Black" BorderThickness="3" HorizontalAlignment="Center" VerticalAlignment="Center"
                                Background="White" Grid.Row="1">
                            <Label VerticalAlignment="Center" Content="Async loading graph..." Margin="10"/>
                        </Border>

                        <DockPanel LastChildFill="False" Grid.Column="1" Margin="3" Grid.RowSpan="4">
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
                                <Button Height="50" Margin="3" Name="tg_but_randomgraph" Click="tg_but_randomgraph_Click" DockPanel.Dock="Top" UseLayoutRounding="True">
                                    <Image Source="Images/dice.png"/>
                                </Button>
                                <Button Height="50" Margin="3" Name="tg_but_relayout"  DockPanel.Dock="Top" UseLayoutRounding="True">
                                    <Image Source="Images/update.png"/>
                                </Button>
                            </StackPanel>
                            <GroupBox Header="Edge options" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <TextBlock DockPanel.Dock="Top" Text="Edge display mode" HorizontalAlignment="Center"/>
                                    <ComboBox x:Name="tg_edgeMode"  Margin="3" SelectionChanged="tg_edgeMode_SelectionChanged" DockPanel.Dock="Top" IsReadOnly="True"/>
                                    <TextBlock DockPanel.Dock="Top" Text="Edge display type" HorizontalAlignment="Center"/>
                                    <ComboBox x:Name="tg_edgeType"  Margin="3" SelectionChanged="tg_edgeType_SelectionChanged" DockPanel.Dock="Top" IsReadOnly="True"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Behaviours" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <CheckBox Name="tg_dragEnabled" Content="Vertex drag enabled" Margin="3" DockPanel.Dock="Top" Checked="tg_dragEnabled_Checked" Unchecked="tg_dragEnabled_Checked"/>
                                    <CheckBox Name="tg_dragMoveEdges" Content="Update edges on move" Margin="3" DockPanel.Dock="Top"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Highlighting" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <CheckBox Name="tg_highlightEnabled" Content="Is feature enabled" Margin="3" DockPanel.Dock="Top" Checked="tg_highlightEnabled_Checked" Unchecked="tg_highlightEnabled_Checked"/>
                                    <TextBlock DockPanel.Dock="Top" Text="Affected control type" HorizontalAlignment="Center"/>
                                    <ComboBox x:Name="tg_highlightType"  Margin="3" SelectionChanged="tg_highlightType_SelectionChanged" DockPanel.Dock="Top" IsReadOnly="True"/>
                                    <TextBlock DockPanel.Dock="Top" Text="Strategy" HorizontalAlignment="Center"/>
                                    <ComboBox x:Name="tg_highlightStrategy"  Margin="3" SelectionChanged="tg_highlightStrategy_SelectionChanged" DockPanel.Dock="Top" IsReadOnly="True"/>
                                    <TextBlock DockPanel.Dock="Top" Text="Edge directions" HorizontalAlignment="Center"/>
                                    <ComboBox x:Name="tg_highlightEdgeType"  Margin="3" SelectionChanged="tg_highlightEdgeType_SelectionChanged" DockPanel.Dock="Top" IsReadOnly="True"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Animation" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <TextBlock DockPanel.Dock="Top" Text="Move animation" HorizontalAlignment="Center"/>
                                    <ComboBox x:Name="tg_moveAnimation"  Margin="3" SelectionChanged="tg_moveAnimation_SelectionChanged" DockPanel.Dock="Top" IsReadOnly="True"/>
                                    <TextBlock DockPanel.Dock="Top" Text="Delete animation" HorizontalAlignment="Center"/>
                                    <ComboBox x:Name="tg_deleteAnimation"  Margin="3" SelectionChanged="tg_deleteAnimation_SelectionChanged" DockPanel.Dock="Top" IsReadOnly="True"/>
                                    <TextBlock DockPanel.Dock="Top" Text="MouseOver animation" HorizontalAlignment="Center"/>
                                    <ComboBox x:Name="tg_mouseoverAnimation"  Margin="3" SelectionChanged="tg_mouseoverAnimation_SelectionChanged" DockPanel.Dock="Top" IsReadOnly="True"/>
                                </DockPanel>
                            </GroupBox>
                        </DockPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Edge routing and handling Graph" x:Name="tab3" Height="30">
                    <Grid>
                        <Grid.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="Templates/ERGraphXTemplates.xaml"/>
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border CornerRadius="6" BorderBrush="Black" Background="White" Margin="3" BorderThickness="2">
                            <TextBlock Margin="3" TextWrapping="Wrap" TextAlignment="Center" Text="Here is an example of the edges routing and handling. You can preview different edge routing and compiling algorithms along with applied visual styles and drag vertices to see routed path changes."/>
                        </Border>

                        <zb:Zoombox x:Name="erg_zoomctrl" Margin="-5,0,5,0" Grid.Row="1">
                            <local:GraphAreaExample x:Name="erg_Area"/>
                        </zb:Zoombox>

                        <DockPanel LastChildFill="False" Grid.Column="1" Grid.RowSpan="4" Margin="3">
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
                                <Button Height="50" Margin="3" Name="erg_but_randomgraph"  DockPanel.Dock="Top" UseLayoutRounding="True">
                                    <Image Source="Images/dice.png"/>
                                </Button>
                                <Button Height="50" Margin="3" Name="erg_but_relayout" DockPanel.Dock="Top" UseLayoutRounding="True">
                                    <Image Source="Images/update.png"/>
                                </Button>
                            </StackPanel>
                            <GroupBox Header="Edge routing algorithm" DockPanel.Dock="Top">
                                <DockPanel LastChildFill="False">
                                    <ComboBox IsReadOnly="True" Name="erg_eralgo" Margin="3" DockPanel.Dock="Top"/>
                                    <CheckBox Name="erg_useExternalERAlgo" DockPanel.Dock="Top"  Margin="3" Content="Use external algorithm"/>
                                    <CheckBox Name="erg_useCurves"  Margin="3" Content="Use curving technique" DockPanel.Dock="Top"/>
                                    <CheckBox Name="erg_recalculate"  Margin="3" Content="Update paths on drag" DockPanel.Dock="Top"/>
                                    <Button Name="erg_toggleVertex" Click="erg_toggleVertex_Click" Content="Toggle vertices" DockPanel.Dock="Top" Visibility="Collapsed"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Edges styling" DockPanel.Dock="Top" Name="erg_stbox">
                                <DockPanel LastChildFill="False">
                                    <TextBlock Text="Edge dash style:" HorizontalAlignment="Center" DockPanel.Dock="Top"/>
                                    <ComboBox IsReadOnly="True" Name="erg_dashstyle" Margin="3" DockPanel.Dock="Top"/>
                                    <Button Margin="3" Content="Randomize edge styles!" Name="erg_randomizeAll" DockPanel.Dock="Top"/>
                                    <Button Margin="3" Content="Randomize edge arrows!" Name="erg_randomizeArrows" DockPanel.Dock="Top"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Common settings" DockPanel.Dock="Top" Name="erg_prms2box">
                                <DockPanel LastChildFill="False">
                                    <CheckBox Margin="3" Content="Show edge arrows" Name="erg_showEdgeArrows" DockPanel.Dock="Top"/>
                                    <CheckBox Margin="3" Content="Show edge labels" Name="erg_showEdgeLabels" DockPanel.Dock="Top"/>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Header="Algorithm parameters" DockPanel.Dock="Top" Name="erg_prmsbox">
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility ="Auto">
                                    <DockPanel LastChildFill="False">
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Name="pfer_prms_dp" Visibility="Collapsed">
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Horizontal grid step:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_PFERParameters.HorizontalGridSize}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top" ToolTip="Smaller the value more points will be available."/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Vertical grid step:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_PFERParameters.VerticalGridSize}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top" ToolTip="Smaller the value more points will be available."/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Side grid offset:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_PFERParameters.SideGridOffset}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top" ToolTip="Additional space around graph from each side that is available for edge routes."/>
                                            <CheckBox Margin="3" IsChecked="{Binding erg_PFERParameters.UseDiagonals}" DockPanel.Dock="Top"  Content="Use diagonals"  ToolTip="Use diagonals in route paths"/>
                                            <CheckBox Margin="3" IsChecked="{Binding erg_PFERParameters.UseHeavyDiagonals}" DockPanel.Dock="Top"  Content="Use heavy diagonals" ToolTip="Prefer using diagonals in route path" />
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Pathfinder formula:" DockPanel.Dock="Top"/>
                                            <ComboBox IsReadOnly="True" Name="erg_pfprm_formula" Margin="3" DockPanel.Dock="Top" SelectedItem="{Binding erg_PFERParameters.PathFinderAlgorithm}"/>
                                            <CheckBox Margin="3" IsChecked="{Binding erg_PFERParameters.PunishChangeDirection}" DockPanel.Dock="Top"  Content="Punish change direction"  ToolTip="Don't prefer direction change results in more directed paths"/>
                                            <CheckBox Margin="3" IsChecked="{Binding erg_PFERParameters.UseTieBreaker}" DockPanel.Dock="Top"  Content="Use tie breaker"  ToolTip="Use tie breaking formula"/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Heuristics level:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_PFERParameters.Heuristic}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top"/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Search tries limit:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_PFERParameters.SearchTriesLimit}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top" ToolTip="Maximum number of tries available to find correct path"/>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Name="simpleer_prms_dp" Visibility="Collapsed">
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Side step:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_SimpleERParameters.SideStep}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top"/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Back step:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_SimpleERParameters.BackStep}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top"/>
                                        </DockPanel>
                                        <DockPanel LastChildFill="False" DockPanel.Dock="Top" Name="bundleer_prms_dp" Visibility="Collapsed">
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Subdivision points:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_BundleEdgeRoutingParameters.SubdivisionPoints}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top" ToolTip="More points - smoother the edge path"/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Iterations:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_BundleEdgeRoutingParameters.Iterations}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top" ToolTip="More iterations - tighter the edge routing channels"/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Spring constant:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_BundleEdgeRoutingParameters.SpringConstant}" PreviewTextInput="erg_PreviewTextInput" DockPanel.Dock="Top" ToolTip="Lower the value - more bended the edges"/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Threshold [0.0 - 1.0]:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_BundleEdgeRoutingParameters.Threshold}" PreviewTextInput="erg_to1_PreviewTextInput" DockPanel.Dock="Top" ToolTip="Edges that have coefficient lower than the threshold between them are not considered for interaction"/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Repulsion coeff [-1.0 - 0.0]:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_BundleEdgeRoutingParameters.RepulsionCoefficient}" PreviewTextInput="erg_tominus1_PreviewTextInput" DockPanel.Dock="Top" ToolTip="If repulseOpposite is true, this determines how much will opposite edges repulse eachother."/>
                                            <Label Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Straightening [0.0 - 1.0]:" DockPanel.Dock="Top"/>
                                            <TextBox Margin="3" Text="{Binding erg_BundleEdgeRoutingParameters.Straightening}" PreviewTextInput="erg_to1_PreviewTextInput" DockPanel.Dock="Top" ToolTip="Amount of straightening that will be applied after every bundling"/>
                                            <CheckBox Margin="3" IsChecked="{Binding erg_BundleEdgeRoutingParameters.RepulseOpposite}" DockPanel.Dock="Top"  Content="Repulse opposite" />
                                            <CheckBox Margin="3" IsChecked="{Binding erg_BundleEdgeRoutingParameters.UseThreading, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Top"  Content="Use threading" ToolTip="Value indicating whether opposite edges should attracts or repulse each other"/>
                                        </DockPanel>
                                    </DockPanel>
                                </ScrollViewer>
                            </GroupBox>
                        </DockPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Dynamic Graph" x:Name="tab4" Height="30">
                    <Grid>
                        <Grid.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="Templates/DynamicGraphXTemplates.xaml"/>
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <Border CornerRadius="6" BorderBrush="Black" Background="White" Margin="3" BorderThickness="2">
                            <TextBlock Margin="3" TextWrapping="Wrap" TextAlignment="Center" Text="Dynamic operations. You can drag vertices, select them with Ctrl+Click and/or drag them all together, add and remove objects using buttons on the sidebar, delete vertices using context menu on right mouse click. Try dragging new vertex from DRAG ME! area. Also try Shift+Alt+Click drag multiple vertices selection! "/>
                        </Border>

                        <zb:Zoombox x:Name="dg_zoomctrl" Grid.Row="1" BorderBrush="Black" BorderThickness="2"  VerticalContentAlignment="Stretch" VerticalAlignment="Stretch">
                            <local:GraphAreaExample x:Name="dg_Area"/>
                        </zb:Zoombox>
                        
                        <DockPanel LastChildFill="False" Grid.Column="1" Grid.RowSpan="4" Margin="3">
                            <GroupBox Header="Vertices" Margin="3" DockPanel.Dock="Top">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Margin="3" ToolTip="Add random vertex" Name="dg_addvertex" Height="50">
                                        <Image Source="Images/add.png"/>
                                    </Button>
                                    <Button Margin="3" ToolTip="Remove selected vertices" Name="dg_remvertex" Height="50">
                                        <Image Source="Images/delete.png"/>
                                    </Button>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Edges" Margin="3" DockPanel.Dock="Top">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Margin="3" ToolTip="Add an edge to random vertices" Name="dg_addedge" Height="50">
                                        <Image Source="Images/add.png" />
                                    </Button>
                                    <Button Margin="3" ToolTip="Remove last added edge" Name="dg_remedge" Height="50">
                                        <Image Source="Images/delete.png" />
                                    </Button>
                                </StackPanel>
                            </GroupBox>
                            <Button Content="Test" DockPanel.Dock="Top" Name="dg_test"/>
                            <Button Margin="3" Content="Find random vertex" DockPanel.Dock="Top" Name="dg_findrandom" Height="25" Click="dg_findrandom_Click"/>
                            <Button Margin="3" Height="25" Content="Enter edge drawing mode!" Name="dg_butdraw" Click="dg_butdraw_Click" DockPanel.Dock="Top"/>

                            <Border Width="80" Height="80" BorderBrush="Black" CornerRadius="3" BorderThickness="2" DockPanel.Dock="Top" Name="dg_dragsource" Margin="8">
                                <StackPanel Orientation="Vertical"  VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Text="DRAG" FontSize="23" HorizontalAlignment="Center"/>
                                <TextBlock Text="ME!" FontSize="23" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </Border>
                        </DockPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Test Ground" Name="tgtab">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <graphxctrl:ZoomControl x:Name="tst_zoomctrl" Grid.Row="1" BorderBrush="Black" BorderThickness="2"  VerticalContentAlignment="Stretch" VerticalAlignment="Stretch">
                            <local:GraphAreaExample x:Name="tst_Area"/>
                        </graphxctrl:ZoomControl>
                        <DockPanel Grid.Column="1" Grid.RowSpan="4" LastChildFill="False">
                            <Button Margin="3" Content="RandomP" Height="25" DockPanel.Dock="Top" Name="tst_but_gen"/>
                            <Button Margin="3" Content="Fake Layout" Height="25" DockPanel.Dock="Top" Name="tst_but_fakeLayout"/>
                        </DockPanel>
                    </Grid>
                </TabItem>
            </TabControl.Items>
        </TabControl>

        <Button Width="100" Margin="3" Content="About" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Name="but_about" Click="but_about_Click"/>

        <TextBlock Name="debug" Grid.Row="2" HorizontalAlignment="Left"/>
    </Grid>
</Window>
